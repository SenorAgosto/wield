<?xml version='1.0' encoding='utf-8'?>
<class abstract="true" id="wield::logging::LoggingPolicy" name="LoggingPolicy" xmlns="http://jessevdk.github.com/cldoc/1.0">
  <brief> A logging interface</brief>
  <doc>Rather than wield defining where to log when there are problems,
users are expected to implement this interface and inject it.
</doc>
  <subclass access="public" name="DefaultLoggingPolicy" ref="wield::logging::DefaultLoggingPolicy#wield::logging::DefaultLoggingPolicy" />
  <destructor id="wield::logging::LoggingPolicy::~LoggingPolicy" name="~LoggingPolicy" virtual="yes" />
  <method abstract="yes" id="wield::logging::LoggingPolicy::Error" name="Error" virtual="yes">
    <brief>Log an error message</brief>
    <return>
      <type builtin="yes" name="void" />
    </return>
    <argument id="wield::logging::LoggingPolicy::Error::error" name="error">
      <type name="std::__1::string" qualifier=" const &amp;" />
    </argument>
  </method>
  <method abstract="yes" id="wield::logging::LoggingPolicy::Info" name="Info" virtual="yes">
    <brief>Log informational message</brief>
    <return>
      <type builtin="yes" name="void" />
    </return>
    <argument id="wield::logging::LoggingPolicy::Info::info" name="info">
      <type name="std::__1::string" qualifier=" const &amp;" />
    </argument>
  </method>
  <method abstract="yes" id="wield::logging::LoggingPolicy::Warning" name="Warning" virtual="yes">
    <brief>Log a warning message</brief>
    <return>
      <type builtin="yes" name="void" />
    </return>
    <argument id="wield::logging::LoggingPolicy::Warning::warning" name="warning">
      <type name="std::__1::string" qualifier=" const &amp;" />
    </argument>
  </method>
</class>